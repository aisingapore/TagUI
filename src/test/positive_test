https://www.google.com
// code to auto-replace local path names in generated js file with /full_path
var fs = require('fs');
var js_result = fs.read('test' + fs.separator + 'positive_test' + '.js');
var local_path = js_result.substring(js_result.indexOf("var flow_path = '") + 17);
local_path = local_path.substring(0,local_path.indexOf("'"));
var regex = new RegExp(local_path,"g"); js_result = js_result.replace(regex,"/full_path");
fs.write('test' + fs.separator + 'positive_test' + '.js', js_result, 'w');
fs.remove('test' + fs.separator + 'positive_test' + '.log');
this.exit(); // don't actually run the steps and code, test is for language conversion
// add a navigation step in order to exit in time and block below output from running
https://ca.yahoo.com

// TEST CONDITIONS

// test contain / not contain
variable = "test variable with some text"
if variable contain "some text"
echo "FOUND"
if variable contains "some text"
echo "FOUND"
if variable not contain "some text"
echo "NOT FOUND"
if variable not contains "some text"
echo "NOT FOUND"
variable = 'test variable with some text'
if variable contain 'some text'
echo 'FOUND'
if variable contains 'some text'
echo 'FOUND'
if variable not contain 'some text'
echo 'NOT FOUND'
if variable not contains 'some text'
echo 'NOT FOUND'

// test equal to / not equal to
variable = "lemon"
if variable equal to "lemon"
echo "LEMON"
if variable equals to "lemon"
echo "LEMON"
if variable not equal to "lemon"
echo "NOT LEMON"
if variable not equals to "lemon"
echo "NOT LEMON"
if variable equal to 'lemon'
echo 'LEMON'
if variable equals to 'lemon'
echo 'LEMON'
if variable not equal to 'lemon'
echo 'NOT LEMON'
if variable not equals to 'lemon'
echo 'NOT LEMON'
variable = 12345
if variable equal to 12345
echo "12345"
if variable equals to 12345
echo "12345"
if variable not equal to 12345
echo "NOT 12345"
if variable not equals to 12345
echo "NOT 12345"

// test more than / greater than / higher than
variable = 5
if variable more than 3
echo "MORE THAN 3"
if variable greater than 3
echo "MORE THAN 3"
if variable higher than 3
echo "MORE THAN 3"

// test more than or equal to / greater than or equal to / higher than or equal to
variable = 5
if variable more than or equal to 5
echo "MORE THAN OR EQUAL TO 5"
if variable greater than or equal to 5
echo "MORE THAN OR EQUAL TO 5"
if variable higher than or equal to 5
echo "MORE THAN OR EQUAL TO 5"

// test less than / lesser than / lower than
variable = 3
if variable less than 5
echo "LESS THAN 5"
if variable lesser than 5
echo "LESS THAN 5"
if variable lower than 5
echo "LESS THAN 5"

// test less than or equal to / lesser than or equal to / lower than or equal to
variable = 5
if variable less than or equal to 5
echo "LESS THAN OR EQUAL TO 5"
if variable lesser than or equal to 5
echo "LESS THAN OR EQUAL TO 5"
if variable lower than or equal to 5
echo "LESS THAN OR EQUAL TO 5"

// test and
if "apple" equals to "apple" and "orange" equals to "orange"
echo "TRUE"
if 5 greater than 3 and 3 lesser than 4
echo "TRUE"
if 5 greater than 3 and 3 lesser than 4 and "kiwi" equals to "kiwi"
echo "TRUE"

// test or
if 'apple' equals to 'apple' or 'orange' equals to 'kiwi'
echo "TRUE"
if 5 lesser than 3 or 5 more than 4
echo "TRUE"
if 5 lesser than 3 or 3 lesser than 4 and "kiwi" equals to "kiwi"
echo "TRUE"

// test combinations of conditions
menu = "fruits and salads"
if menu contains 'fruits' and menu not contains "potatoes"
echo "FRUITS ONLY"

// test for
for n from 1 to 5
echo "ITERATION " + n
for n from 0 to 0
echo "ITERATION " + n
for (n=6; n<=10; n++)
echo "ITERATION " + n
for n from 1 to 5
click element
for n from 0 to 0
click element
for (n=6; n<=10; n++)
click element

// test while
while 2 > 3 and 3 > 4
echo "INVALID"
while ((2 > 3) && (3 > 4))
echo "INVALID"
while 2 > 3 and 3 > 4
click element
while ((2 > 3) && (3 > 4))
click element

// test {} simple
{
this.echo('test');
}
{
click test
}

// test {} complex
{
click test1
click test2
this.echo('test');
click test3
}

// test {} for loop simple
for number from 1 to 5
{
click test
}

// test {} for loop complex
for number from 1 to 5
{
click test1
click test2
this.echo('test');
click test3
}

// test {} while loop simple
number = 1
while (number <= 5)
{
click test
}

// test {} while loop complex
while (number <= 5)
{
click test1
click test2
this.echo('test');
click test3
number++;
}

// test {} for popup step
popup about
{
click test
}
popup about
{
click test1
click test2
this.echo('test');
click test3
}

// test {} for frame step
frame about
{
click test
}
frame about
{
click test1
click test2
this.echo('test');
click test3
}

frame about | detail
{
click test
}
frame about | detail
{
click test1
click test2
this.echo('test');
click test3
}

// test if in javascript
if (2 < 3)
echo "TRUE"

// TEST STEPS

// test tap / click (including sikuli visual automation)
tap element
click element
tap button.png
click button.bmp

// test hover / move (including sikuli visual automation)
hover element
move element
hover button.png
move button.bmp

// test type / enter (including sikuli visual automation)
type element as some text
enter element as some text
type textbox.png as some text
enter textbox.bmp as some text

// test type / enter for [enter] and [clear] keywords
type element as some text[enter]
enter element as some text[enter]
type element as [clear]
enter element as [clear]
type element as [clear]some text[enter]
enter element as [clear]some text[enter]

// test select / enter (including sikuli visual automation)
select element as option
choose element as option
select option_list.png as option_item.bmp
choose option_list.bmp as option_item.png

// test read / fetch
read element to variable
read page to variable
fetch element to variable
fetch page to variable

// test show / print
show element
show page
print element
print page

// test save
save element
save element to filename.txt
save element to /tmp/filename.txt
save page
save page to filename.txt
save page to /tmp/filename.txt

// test echo
echo variable
echo 'some text' ' ' 'some text'
echo "some text - " + variable
echo 'some text - ' + variable
echo "some text - " variable
echo 'some text - ' variable
echo variable " - some text - " variable  " - some text "   "some text - "  +  variable

// test dump
dump "some text - " + variable
dump 'some text - ' + variable
dump "some text - " + variable to filename.txt
dump 'some text - ' + variable to filename.txt
dump "some text - " + variable to /tmp/filename.txt
dump 'some text - ' + variable to /tmp/filename.txt
dump "some text - " variable
dump 'some text - ' variable
dump "some text - " variable to filename.txt
dump 'some text - ' variable to filename.txt
dump "some text - " variable to /tmp/filename.txt
dump 'some text - ' variable to /tmp/filename.txt

// test write
write 'abc'
write 'efg'
write 'ghi' to filename.txt
write 'ijk' to filename.txt

// test snap
snap element
snap element to filename.png
snap element to /tmp/filename.png
snap element to document.pdf
snap page
snap page to filename.png
snap page to /tmp/filename.png
snap page to document.pdf

// test table (no css selector)
table element
table element to filename.csv
table (//table)[7]
table (//table)[7] to filename.csv

// test upload
upload #css_selector as abc.png
upload #css_selector as /tmp/abc.png

// test download
download http://www.dummytestsite.com/report/month.txt to filename.txt
download http://www.dummytestsite.com/report/month.txt to /tmp/filename.txt

// test receive
receive report to filename.txt
receive report to /tmp/filename.txt

// test wait
wait
wait 2.5
wait 10.0
wait 10
wait 10s
wait 10sec
wait 10secs
wait 10seconds
wait 10 s
wait 10 sec
wait 10 secs
wait 10 seconds
wait 7.5 seconds

// test check
check eggs lesser than 10 | "eggs lesser than 10" | "eggs not lesser than 10"
check eggs lesser than 10|"eggs lesser than 10"|"eggs not lesser than 10"
check eggs lesser than 10 | 'eggs lesser than 10' | 'eggs not lesser than 10'
check eggs lesser than 10|'eggs lesser than 10'|'eggs not lesser than 10'

// test frame
frame mainframe
echo "test mainframe"
frame mainframe | subframe
echo "test subframe"

// test popup
popup url_keyword
echo "test popup"
popup url_keyword
frame mainframe
echo "test popup with mainframe"
popup url_keyword
frame mainframe | subframe
echo "test popup with subframe"

// test api direct
api http://www.dummytestsite.com/api?COLOR1=red&COLOR2=green&COLOR3=blue

// test api with variables
var COLOR1='red'; var COLOR2='green'; var COLOR3='blue';
api http://www.dummytestsite.com/api?COLOR1='+COLOR1+'&COLOR2='+COLOR2+'&COLOR3='+COLOR3+'

// test dom
dom var page_title = document.title;

// test test
// test something and see what happens

// test js
js this.echo('THIS IS JAVASCRIPT');

// test timeout
timeout 4 seconds
timeout 5.67
timeout 6

// test comment
// user comment
//user comment
//

// test url without variable
http://www.dummytestsite.com

// test url with variable
target_url = "www.dummytestsite.com";
http://'+target_url+'

// test present function
if present('footer')
{
print footer
}
else
{
echo 'footer not found'
}

// test visible function
if visible('footer')
{
echo 'footer is visible'
}
else
{
echo 'footer not visible'
}

// test title function
echo title()
if title() contains 'About'
echo 'page title contains About'

// test url function
echo url()
if url() contains 'org'
echo 'page url contains org'

// test text function
echo text()
if text() contains 'automation'
echo 'page text contains automation'

// test count function
echo count('element')
element_count = count('element')
for n from 1 to element_count
{
echo n
}
